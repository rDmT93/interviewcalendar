{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0-oas3",
    "title": "Calendar API",
    "description": "Rest API for interview scheduling"
  },
  "paths": {
    "/users": {
      "get": {
        "summary": "Lists all users",
        "operationId": "listUsers",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "The list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a user",
        "operationId": "createUser",
        "tags": [
          "users"
        ],
        "requestBody": {
          "description": "The new user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The id of the created user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserId"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Gets a user by Id",
        "operationId": "getUserById",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The id of the user to fetch",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The fetched user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a user",
        "operationId": "deleteUser",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The id of the user to delete",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/slots": {
      "get": {
        "summary": "Lists the slots of a user",
        "operationId": "getUserSlots",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The id of the user",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The slots of the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Slot"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/slots": {
      "post": {
        "summary": "Creates a new interview slot",
        "operationId": "createSlot",
        "tags": [
          "slots"
        ],
        "requestBody": {
          "description": "The new slot",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Slot"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The id of the created slot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlotId"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/slots/{slotId}": {
      "delete": {
        "summary": "Deletes a slot",
        "operationId": "deleteSlot",
        "tags": [
          "slots"
        ],
        "parameters": [
          {
            "name": "slotId",
            "in": "path",
            "required": true,
            "description": "The id of the slot to delete",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/candidates/{candidateId}/interviewSlots": {
      "get": {
        "summary": "Lists the interview slots of a candidate",
        "operationId": "listCandidateInterviewSlots",
        "tags": [
          "candidates"
        ],
        "parameters": [
          {
            "name": "candidateId",
            "in": "path",
            "required": true,
            "description": "The id of the candidate",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "interviewerIdList",
            "in": "query",
            "required": false,
            "description": "The list of interviewers' id",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The fetched user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterviewSlot"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": [
          "name",
          "role"
        ],
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "INTERVIEWER",
              "CANDIDATE"
            ]
          }
        }
      },
      "UserId": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Slot": {
        "type": "object",
        "required": [
          "userId",
          "startDateTime",
          "endDateTime"
        ],
        "properties": {
          "slotId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SlotId": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "InterviewSlot": {
        "type": "object",
        "required": [
          "startDateTime",
          "endDateTime"
        ],
        "properties": {
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}